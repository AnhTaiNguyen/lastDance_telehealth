// Generated by view binder compiler. Do not edit!
package com.works.lastdance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.works.lastdance.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPatientRegisterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton btnRDocConfirm;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final EditText txtClientAge;

  @NonNull
  public final EditText txtClientEmail;

  @NonNull
  public final EditText txtClientName;

  @NonNull
  public final EditText txtClientPassword;

  @NonNull
  public final EditText txtClientSurname;

  private ActivityPatientRegisterBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton btnRDocConfirm, @NonNull TextView textView2,
      @NonNull EditText txtClientAge, @NonNull EditText txtClientEmail,
      @NonNull EditText txtClientName, @NonNull EditText txtClientPassword,
      @NonNull EditText txtClientSurname) {
    this.rootView = rootView;
    this.btnRDocConfirm = btnRDocConfirm;
    this.textView2 = textView2;
    this.txtClientAge = txtClientAge;
    this.txtClientEmail = txtClientEmail;
    this.txtClientName = txtClientName;
    this.txtClientPassword = txtClientPassword;
    this.txtClientSurname = txtClientSurname;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPatientRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPatientRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_patient_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPatientRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnRDocConfirm;
      ImageButton btnRDocConfirm = ViewBindings.findChildViewById(rootView, id);
      if (btnRDocConfirm == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.txtClientAge;
      EditText txtClientAge = ViewBindings.findChildViewById(rootView, id);
      if (txtClientAge == null) {
        break missingId;
      }

      id = R.id.txtClientEmail;
      EditText txtClientEmail = ViewBindings.findChildViewById(rootView, id);
      if (txtClientEmail == null) {
        break missingId;
      }

      id = R.id.txtClientName;
      EditText txtClientName = ViewBindings.findChildViewById(rootView, id);
      if (txtClientName == null) {
        break missingId;
      }

      id = R.id.txtClientPassword;
      EditText txtClientPassword = ViewBindings.findChildViewById(rootView, id);
      if (txtClientPassword == null) {
        break missingId;
      }

      id = R.id.txtClientSurname;
      EditText txtClientSurname = ViewBindings.findChildViewById(rootView, id);
      if (txtClientSurname == null) {
        break missingId;
      }

      return new ActivityPatientRegisterBinding((ConstraintLayout) rootView, btnRDocConfirm,
          textView2, txtClientAge, txtClientEmail, txtClientName, txtClientPassword,
          txtClientSurname);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
