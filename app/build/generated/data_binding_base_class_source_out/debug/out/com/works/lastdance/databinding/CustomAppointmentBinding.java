// Generated by view binder compiler. Do not edit!
package com.works.lastdance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.works.lastdance.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomAppointmentBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView rAppPDate;

  @NonNull
  public final TextView rAppPField;

  @NonNull
  public final TextView rAppPHour;

  @NonNull
  public final ImageView rAppPImg;

  @NonNull
  public final TextView rAppPName;

  @NonNull
  public final TextView rAppPNote;

  private CustomAppointmentBinding(@NonNull LinearLayout rootView, @NonNull TextView rAppPDate,
      @NonNull TextView rAppPField, @NonNull TextView rAppPHour, @NonNull ImageView rAppPImg,
      @NonNull TextView rAppPName, @NonNull TextView rAppPNote) {
    this.rootView = rootView;
    this.rAppPDate = rAppPDate;
    this.rAppPField = rAppPField;
    this.rAppPHour = rAppPHour;
    this.rAppPImg = rAppPImg;
    this.rAppPName = rAppPName;
    this.rAppPNote = rAppPNote;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomAppointmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomAppointmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_appointment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomAppointmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.r_appPDate;
      TextView rAppPDate = ViewBindings.findChildViewById(rootView, id);
      if (rAppPDate == null) {
        break missingId;
      }

      id = R.id.r_appPField;
      TextView rAppPField = ViewBindings.findChildViewById(rootView, id);
      if (rAppPField == null) {
        break missingId;
      }

      id = R.id.r_appPHour;
      TextView rAppPHour = ViewBindings.findChildViewById(rootView, id);
      if (rAppPHour == null) {
        break missingId;
      }

      id = R.id.r_appPImg;
      ImageView rAppPImg = ViewBindings.findChildViewById(rootView, id);
      if (rAppPImg == null) {
        break missingId;
      }

      id = R.id.r_appPName;
      TextView rAppPName = ViewBindings.findChildViewById(rootView, id);
      if (rAppPName == null) {
        break missingId;
      }

      id = R.id.r_appPNote;
      TextView rAppPNote = ViewBindings.findChildViewById(rootView, id);
      if (rAppPNote == null) {
        break missingId;
      }

      return new CustomAppointmentBinding((LinearLayout) rootView, rAppPDate, rAppPField, rAppPHour,
          rAppPImg, rAppPName, rAppPNote);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
